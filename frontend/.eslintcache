[{"C:\\Users\\PRIYANSHU\\PRIYANSHU\\CODING\\PROJECTS\\LinkIt\\frontend\\src\\index.js":"1","C:\\Users\\PRIYANSHU\\PRIYANSHU\\CODING\\PROJECTS\\LinkIt\\frontend\\src\\App.js":"2","C:\\Users\\PRIYANSHU\\PRIYANSHU\\CODING\\PROJECTS\\LinkIt\\frontend\\src\\component\\Logout.js":"3","C:\\Users\\PRIYANSHU\\PRIYANSHU\\CODING\\PROJECTS\\LinkIt\\frontend\\src\\component\\Navbar.js":"4","C:\\Users\\PRIYANSHU\\PRIYANSHU\\CODING\\PROJECTS\\LinkIt\\frontend\\src\\component\\Welcome.js":"5","C:\\Users\\PRIYANSHU\\PRIYANSHU\\CODING\\PROJECTS\\LinkIt\\frontend\\src\\component\\Signup.js":"6","C:\\Users\\PRIYANSHU\\PRIYANSHU\\CODING\\PROJECTS\\LinkIt\\frontend\\src\\component\\Login.js":"7","C:\\Users\\PRIYANSHU\\PRIYANSHU\\CODING\\PROJECTS\\LinkIt\\frontend\\src\\component\\Profile.js":"8","C:\\Users\\PRIYANSHU\\PRIYANSHU\\CODING\\PROJECTS\\LinkIt\\frontend\\src\\component\\Home.js":"9","C:\\Users\\PRIYANSHU\\PRIYANSHU\\CODING\\PROJECTS\\LinkIt\\frontend\\src\\component\\Applications.js":"10","C:\\Users\\PRIYANSHU\\PRIYANSHU\\CODING\\PROJECTS\\LinkIt\\frontend\\src\\component\\recruiter\\CreateJobs.js":"11","C:\\Users\\PRIYANSHU\\PRIYANSHU\\CODING\\PROJECTS\\LinkIt\\frontend\\src\\component\\recruiter\\MyJobs.js":"12","C:\\Users\\PRIYANSHU\\PRIYANSHU\\CODING\\PROJECTS\\LinkIt\\frontend\\src\\component\\recruiter\\JobApplications.js":"13","C:\\Users\\PRIYANSHU\\PRIYANSHU\\CODING\\PROJECTS\\LinkIt\\frontend\\src\\lib\\MessagePopup.js":"14","C:\\Users\\PRIYANSHU\\PRIYANSHU\\CODING\\PROJECTS\\LinkIt\\frontend\\src\\component\\recruiter\\AcceptedApplicants.js":"15","C:\\Users\\PRIYANSHU\\PRIYANSHU\\CODING\\PROJECTS\\LinkIt\\frontend\\src\\lib\\isAuth.js":"16","C:\\Users\\PRIYANSHU\\PRIYANSHU\\CODING\\PROJECTS\\LinkIt\\frontend\\src\\component\\recruiter\\Profile.js":"17","C:\\Users\\PRIYANSHU\\PRIYANSHU\\CODING\\PROJECTS\\LinkIt\\frontend\\src\\lib\\PasswordInput.js":"18","C:\\Users\\PRIYANSHU\\PRIYANSHU\\CODING\\PROJECTS\\LinkIt\\frontend\\src\\lib\\apiList.js":"19","C:\\Users\\PRIYANSHU\\PRIYANSHU\\CODING\\PROJECTS\\LinkIt\\frontend\\src\\lib\\EmailInput.js":"20","C:\\Users\\PRIYANSHU\\PRIYANSHU\\CODING\\PROJECTS\\LinkIt\\frontend\\src\\lib\\FileUploadInput.js":"21"},{"size":219,"mtime":1649899544000,"results":"22","hashOfConfig":"23"},{"size":3386,"mtime":1698341245217,"results":"24","hashOfConfig":"23"},{"size":489,"mtime":1698341216202,"results":"25","hashOfConfig":"23"},{"size":3716,"mtime":1700157633024,"results":"26","hashOfConfig":"23"},{"size":2714,"mtime":1700158587928,"results":"27","hashOfConfig":"23"},{"size":13708,"mtime":1699945981824,"results":"28","hashOfConfig":"23"},{"size":4076,"mtime":1700158401270,"results":"29","hashOfConfig":"23"},{"size":10607,"mtime":1699945920966,"results":"30","hashOfConfig":"23"},{"size":21673,"mtime":1700155230774,"results":"31","hashOfConfig":"23"},{"size":7658,"mtime":1700158127140,"results":"32","hashOfConfig":"23"},{"size":8308,"mtime":1700157719813,"results":"33","hashOfConfig":"23"},{"size":25948,"mtime":1700157864445,"results":"34","hashOfConfig":"23"},{"size":22460,"mtime":1700158253726,"results":"35","hashOfConfig":"23"},{"size":489,"mtime":1698339983858,"results":"36","hashOfConfig":"23"},{"size":22124,"mtime":1700157905181,"results":"37","hashOfConfig":"23"},{"size":165,"mtime":1649899544000,"results":"38","hashOfConfig":"23"},{"size":5113,"mtime":1700157928004,"results":"39","hashOfConfig":"23"},{"size":1666,"mtime":1698339989311,"results":"40","hashOfConfig":"23"},{"size":505,"mtime":1698339204006,"results":"41","hashOfConfig":"23"},{"size":1167,"mtime":1649899544000,"results":"42","hashOfConfig":"23"},{"size":2930,"mtime":1698339968268,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1e8gova",{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"46"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"46"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"C:\\Users\\PRIYANSHU\\PRIYANSHU\\CODING\\PROJECTS\\LinkIt\\frontend\\src\\index.js",[],["91","92"],"C:\\Users\\PRIYANSHU\\PRIYANSHU\\CODING\\PROJECTS\\LinkIt\\frontend\\src\\App.js",["93","94"],"import { createContext, useState } from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport { Grid, makeStyles } from \"@material-ui/core\";\n\nimport Welcome, { ErrorPage } from \"./component/Welcome\";\nimport Navbar from \"./component/Navbar\";\nimport Login from \"./component/Login\";\nimport Logout from \"./component/Logout\";\nimport Signup from \"./component/Signup\";\nimport Home from \"./component/Home\";\nimport Applications from \"./component/Applications\";\nimport Profile from \"./component/Profile\";\nimport CreateJobs from \"./component/recruiter/CreateJobs\";\nimport MyJobs from \"./component/recruiter/MyJobs\";\nimport JobApplications from \"./component/recruiter/JobApplications\";\nimport AcceptedApplicants from \"./component/recruiter/AcceptedApplicants\";\nimport RecruiterProfile from \"./component/recruiter/Profile\";\nimport MessagePopup from \"./lib/MessagePopup\";\nimport isAuth, { userType } from \"./lib/isAuth\";\n\nconst useStyles = makeStyles(\n  (theme) => ({\n  body: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    minHeight: \"98vh\",\n    paddingTop: \"64px\",\n    boxSizing: \"border-box\",\n    width: \"100%\",\n  },\n}));\n\nexport const SetPopupContext = createContext();\nconst TITLE =\"LinkIt\"\n\nfunction App() {\n  const classes = useStyles();\n  const [popup, setPopup] = useState({\n    open: false,\n    severity: \"\",\n    message: \"\",\n  });\n\n  return (\n    <BrowserRouter>\n      \n      <SetPopupContext.Provider value={setPopup}>\n      \n        <Grid container direction=\"column\">\n          <Grid item xs>\n            <Navbar />\n          </Grid>\n          <Grid item className={classes.body}>\n            <Switch>\n              <Route exact path=\"/\">\n                <Welcome />\n              </Route>\n              <Route exact path=\"/login\">\n                <Login />\n              </Route>\n              <Route exact path=\"/signup\">\n                <Signup />\n              </Route>\n              <Route exact path=\"/logout\">\n                <Logout />\n              </Route>\n              <Route exact path=\"/home\">\n                <Home />\n              </Route>\n              <Route exact path=\"/applications\">\n                <Applications />\n              </Route>\n             \n              <Route exact path=\"/profile\">\n                {userType() === \"recruiter\" ? (\n                  <RecruiterProfile />\n                ) : (\n                  <Profile />\n                )}\n              </Route>\n              <Route exact path=\"/addjob\">\n                <CreateJobs />\n              </Route>\n              <Route exact path=\"/myjobs\">\n                <MyJobs />\n              </Route>\n              <Route exact path=\"/job/applications/:jobId\">\n                <JobApplications />\n              </Route>\n              <Route exact path=\"/employees\">\n                <AcceptedApplicants />\n              </Route>\n              <Route>\n                <ErrorPage />\n              </Route>\n            </Switch>\n          </Grid>\n        </Grid>\n        <MessagePopup\n          open={popup.open}\n          setOpen={(status) =>\n            setPopup({\n              ...popup,\n              open: status,\n            })\n          }\n          severity={popup.severity}\n          message={popup.message}\n        />\n      </SetPopupContext.Provider>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","C:\\Users\\PRIYANSHU\\PRIYANSHU\\CODING\\PROJECTS\\LinkIt\\frontend\\src\\component\\Logout.js",["95"],"import { useEffect, useContext } from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nimport { SetPopupContext } from \"../App\";\n\nconst Logout = (props) => {\n  const setPopup = useContext(SetPopupContext);\n  useEffect(() => {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"type\");\n    setPopup({\n      open: true,\n      severity: \"success\",\n      message: \"Logged out successfully\",\n    });\n  }, []);\n  return <Redirect to=\"/login\" />;\n};\n\nexport default Logout;\n","C:\\Users\\PRIYANSHU\\PRIYANSHU\\CODING\\PROJECTS\\LinkIt\\frontend\\src\\component\\Navbar.js",["96"],"C:\\Users\\PRIYANSHU\\PRIYANSHU\\CODING\\PROJECTS\\LinkIt\\frontend\\src\\component\\Welcome.js",[],"C:\\Users\\PRIYANSHU\\PRIYANSHU\\CODING\\PROJECTS\\LinkIt\\frontend\\src\\component\\Signup.js",["97"],"import { useState, useContext } from \"react\";\nimport {\n  Grid,\n  TextField,\n  Button,\n  Typography,\n  makeStyles,\n  Paper,\n  MenuItem,\n  Input,\n} from \"@material-ui/core\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\nimport ChipInput from \"material-ui-chip-input\";\nimport DescriptionIcon from \"@material-ui/icons/Description\";\nimport FaceIcon from \"@material-ui/icons/Face\";\nimport PhoneInput from \"react-phone-input-2\";\nimport \"react-phone-input-2/lib/material.css\";\n\nimport PasswordInput from \"../lib/PasswordInput\";\nimport EmailInput from \"../lib/EmailInput\";\nimport FileUploadInput from \"../lib/FileUploadInput\";\nimport { SetPopupContext } from \"../App\";\n\nimport apiList from \"../lib/apiList\";\nimport isAuth from \"../lib/isAuth\";\n\nconst useStyles = makeStyles((theme) => ({\n  body: {\n    padding: \"60px 60px\",\n  },\n  inputBox: {\n    width: \"400px\",\n  },\n  submitButton: {\n    width: \"400px\",\n  },\n}));\n\nconst MultifieldInput = (props) => {\n  const classes = useStyles();\n  const { education, setEducation } = props;\n\n  return (\n    <>\n      {education.map((obj, key) => (\n        <Grid\n          item\n          container\n          className={classes.inputBox}\n          key={key}\n          style={{ paddingLeft: 0, paddingRight: 0 }}\n        >\n          <Grid item xs={6}>\n            <TextField\n              label={`Institution Name #${key + 1}`}\n              value={education[key].institutionName}\n              onChange={(event) => {\n                const newEdu = [...education];\n                newEdu[key].institutionName = event.target.value;\n                setEducation(newEdu);\n              }}\n              variant=\"outlined\"\n            />\n          </Grid>\n          <Grid item xs={3}>\n            <TextField\n              label=\"Start Year\"\n              value={obj.startYear}\n              variant=\"outlined\"\n              type=\"number\"\n              onChange={(event) => {\n                const newEdu = [...education];\n                newEdu[key].startYear = event.target.value;\n                setEducation(newEdu);\n              }}\n            />\n          </Grid>\n          <Grid item xs={3}>\n            <TextField\n              label=\"End Year\"\n              value={obj.endYear}\n              variant=\"outlined\"\n              type=\"number\"\n              onChange={(event) => {\n                const newEdu = [...education];\n                newEdu[key].endYear = event.target.value;\n                setEducation(newEdu);\n              }}\n            />\n          </Grid>\n        </Grid>\n      ))}\n      <Grid item>\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          onClick={() =>\n            setEducation([\n              ...education,\n              {\n                institutionName: \"\",\n                startYear: \"\",\n                endYear: \"\",\n              },\n            ])\n          }\n          className={classes.inputBox}\n        >\n          Add another institution details\n        </Button>\n      </Grid>\n    </>\n  );\n};\n\nconst Signup = (props) => {\n  const classes = useStyles();\n  const setPopup = useContext(SetPopupContext);\n\n  const [loggedin, setLoggedin] = useState(isAuth());\n\n  const [signupDetails, setSignupDetails] = useState({\n    type: \"applicant\",\n    email: \"\",\n    password: \"\",\n    name: \"\",\n    education: [],\n    skills: [],\n    resume: \"\",\n    profile: \"\",\n    bio: \"\",\n    contactNumber: \"\",\n  });\n\n  const [phone, setPhone] = useState(\"\");\n\n  const [education, setEducation] = useState([\n    {\n      institutionName: \"\",\n      startYear: \"\",\n      endYear: \"\",\n    },\n  ]);\n\n  const [inputErrorHandler, setInputErrorHandler] = useState({\n    email: {\n      untouched: true,\n      required: true,\n      error: false,\n      message: \"\",\n    },\n    password: {\n      untouched: true,\n      required: true,\n      error: false,\n      message: \"\",\n    },\n    name: {\n      untouched: true,\n      required: true,\n      error: false,\n      message: \"\",\n    },\n  });\n\n  const handleInput = (key, value) => {\n    setSignupDetails({\n      ...signupDetails,\n      [key]: value,\n    });\n  };\n\n  const handleInputError = (key, status, message) => {\n    setInputErrorHandler({\n      ...inputErrorHandler,\n      [key]: {\n        required: true,\n        untouched: false,\n        error: status,\n        message: message,\n      },\n    });\n  };\n\n  const handleLogin = () => {\n    const tmpErrorHandler = {};\n    Object.keys(inputErrorHandler).forEach((obj) => {\n      if (inputErrorHandler[obj].required && inputErrorHandler[obj].untouched) {\n        tmpErrorHandler[obj] = {\n          required: true,\n          untouched: false,\n          error: true,\n          message: `${obj[0].toUpperCase() + obj.substr(1)} is required`,\n        };\n      } else {\n        tmpErrorHandler[obj] = inputErrorHandler[obj];\n      }\n    });\n\n    console.log(education);\n\n    let updatedDetails = {\n      ...signupDetails,\n      education: education\n        .filter((obj) => obj.institutionName.trim() !== \"\")\n        .map((obj) => {\n          if (obj[\"endYear\"] === \"\") {\n            delete obj[\"endYear\"];\n          }\n          return obj;\n        }),\n    };\n\n    setSignupDetails(updatedDetails);\n\n    const verified = !Object.keys(tmpErrorHandler).some((obj) => {\n      return tmpErrorHandler[obj].error;\n    });\n\n    if (verified) {\n      axios\n        .post(apiList.signup, updatedDetails)\n        .then((response) => {\n          localStorage.setItem(\"token\", response.data.token);\n          localStorage.setItem(\"type\", response.data.type);\n          setLoggedin(isAuth());\n          setPopup({\n            open: true,\n            severity: \"success\",\n            message: \"Logged in successfully\",\n          });\n          console.log(response);\n        })\n        .catch((err) => {\n          setPopup({\n            open: true,\n            severity: \"error\",\n            message: err.response.data.message,\n          });\n          console.log(err.response);\n        });\n    } else {\n      setInputErrorHandler(tmpErrorHandler);\n      setPopup({\n        open: true,\n        severity: \"error\",\n        message: \"Incorrect Input\",\n      });\n    }\n  };\n\n  const handleLoginRecruiter = () => {\n    const tmpErrorHandler = {};\n    Object.keys(inputErrorHandler).forEach((obj) => {\n      if (inputErrorHandler[obj].required && inputErrorHandler[obj].untouched) {\n        tmpErrorHandler[obj] = {\n          required: true,\n          untouched: false,\n          error: true,\n          message: `${obj[0].toUpperCase() + obj.substr(1)} is required`,\n        };\n      } else {\n        tmpErrorHandler[obj] = inputErrorHandler[obj];\n      }\n    });\n\n    let updatedDetails = {\n      ...signupDetails,\n    };\n    if (phone !== \"\") {\n      updatedDetails = {\n        ...signupDetails,\n        contactNumber: `+${phone}`,\n      };\n    } else {\n      updatedDetails = {\n        ...signupDetails,\n        contactNumber: \"\",\n      };\n    }\n\n    setSignupDetails(updatedDetails);\n\n    const verified = !Object.keys(tmpErrorHandler).some((obj) => {\n      return tmpErrorHandler[obj].error;\n    });\n\n    console.log(updatedDetails);\n\n    if (verified) {\n      axios\n        .post(apiList.signup, updatedDetails)\n        .then((response) => {\n          localStorage.setItem(\"token\", response.data.token);\n          localStorage.setItem(\"type\", response.data.type);\n          setLoggedin(isAuth());\n          setPopup({\n            open: true,\n            severity: \"success\",\n            message: \"Logged in successfully\",\n          });\n          console.log(response);\n        })\n        .catch((err) => {\n          setPopup({\n            open: true,\n            severity: \"error\",\n            message: err.response.data.message,\n          });\n          console.log(err.response);\n        });\n    } else {\n      setInputErrorHandler(tmpErrorHandler);\n      setPopup({\n        open: true,\n        severity: \"error\",\n        message: \"Incorrect Input\",\n      });\n    }\n  };\n\n  return loggedin ? (\n    <Redirect to=\"/home\" />\n  ) : (\n    <Paper elevation={3} className={classes.body}>\n      <Grid container direction=\"column\" spacing={4} alignItems=\"center\">\n        <Grid item>\n          <Typography\n            variant=\"h3\"\n            component=\"h2\"\n            style={{ color: \"#3f51b5\", fontWeight: \"bold\" }}\n          >\n            Sign up\n          </Typography>\n        </Grid>\n        <Grid item>\n          <TextField\n            select\n            label=\"Category\"\n            variant=\"outlined\"\n            className={classes.inputBox}\n            value={signupDetails.type}\n            onChange={(event) => {\n              handleInput(\"type\", event.target.value);\n            }}\n          >\n            <MenuItem value=\"applicant\">Applicant</MenuItem>\n            <MenuItem value=\"recruiter\">Recruiter</MenuItem>\n          </TextField>\n        </Grid>\n        <Grid item>\n          <TextField\n            label=\"Name\"\n            value={signupDetails.name}\n            onChange={(event) => handleInput(\"name\", event.target.value)}\n            className={classes.inputBox}\n            error={inputErrorHandler.name.error}\n            helperText={inputErrorHandler.name.message}\n            onBlur={(event) => {\n              if (event.target.value === \"\") {\n                handleInputError(\"name\", true, \"Name is required\");\n              } else {\n                handleInputError(\"name\", false, \"\");\n              }\n            }}\n            variant=\"outlined\"\n          />\n        </Grid>\n        <Grid item>\n          <EmailInput\n            label=\"Email\"\n            value={signupDetails.email}\n            onChange={(event) => handleInput(\"email\", event.target.value)}\n            inputErrorHandler={inputErrorHandler}\n            handleInputError={handleInputError}\n            className={classes.inputBox}\n            required={true}\n          />\n        </Grid>\n        <Grid item>\n          <PasswordInput\n            label=\"Password\"\n            value={signupDetails.password}\n            onChange={(event) => handleInput(\"password\", event.target.value)}\n            className={classes.inputBox}\n            error={inputErrorHandler.password.error}\n            helperText={inputErrorHandler.password.message}\n            onBlur={(event) => {\n              if (event.target.value === \"\") {\n                handleInputError(\"password\", true, \"Password is required\");\n              } else {\n                handleInputError(\"password\", false, \"\");\n              }\n            }}\n          />\n        </Grid>\n        {signupDetails.type === \"applicant\" ? (\n          <>\n            <MultifieldInput\n              education={education}\n              setEducation={setEducation}\n            />\n            <Grid item>\n              <ChipInput\n                className={classes.inputBox}\n                label=\"Skills\"\n                variant=\"outlined\"\n                helperText=\"Press enter to add skills\"\n                onChange={(chips) =>\n                  setSignupDetails({ ...signupDetails, skills: chips })\n                }\n              />\n            </Grid>\n            <Grid item>\n              <FileUploadInput\n                className={classes.inputBox}\n                label=\"Resume (Images only)\"\n                icon={<DescriptionIcon />}\n                // value={files.resume}\n                // onChange={(event) =>\n                //   setFiles({\n                //     ...files,\n                //     resume: event.target.files[0],\n                //   })\n                // }\n                uploadTo={apiList.uploadResume}\n                handleInput={handleInput}\n                identifier={\"resume\"}\n              />\n            </Grid>\n            <Grid item>\n              <FileUploadInput\n                className={classes.inputBox}\n                label=\"Profile Photo (.jpg/.png)\"\n                icon={<FaceIcon />}\n                // value={files.profileImage}\n                // onChange={(event) =>\n                //   setFiles({\n                //     ...files,\n                //     profileImage: event.target.files[0],\n                //   })\n                // }\n                uploadTo={apiList.uploadProfileImage}\n                handleInput={handleInput}\n                identifier={\"profile\"}\n              />\n            </Grid>\n          </>\n        ) : (\n          <>\n            <Grid item style={{ width: \"100%\" }}>\n              <TextField\n                label=\"Bio (upto 250 words)\"\n                multiline\n                rows={8}\n                style={{ width: \"100%\" }}\n                variant=\"outlined\"\n                value={signupDetails.bio}\n                onChange={(event) => {\n                  if (\n                    event.target.value.split(\" \").filter(function (n) {\n                      return n !== \"\";\n                    }).length <= 250\n                  ) {\n                    handleInput(\"bio\", event.target.value);\n                  }\n                }}\n              />\n            </Grid>\n            <Grid item>\n              <PhoneInput\n                country={\"in\"}\n                value={phone}\n                onChange={(phone) => setPhone(phone)}\n              />\n            </Grid>\n          </>\n        )}\n\n        <Grid item>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              signupDetails.type === \"applicant\"\n                ? handleLogin()\n                : handleLoginRecruiter();\n            }}\n            className={classes.submitButton}\n            style={{ borderRadius: \"8px\", width: \"130px\", height: \"50px\" }}\n          >\n            Signup\n          </Button>\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default Signup;\n","C:\\Users\\PRIYANSHU\\PRIYANSHU\\CODING\\PROJECTS\\LinkIt\\frontend\\src\\component\\Login.js",["98","99"],"C:\\Users\\PRIYANSHU\\PRIYANSHU\\CODING\\PROJECTS\\LinkIt\\frontend\\src\\component\\Profile.js",["100","101","102","103","104","105","106","107"],"import { useContext, useEffect, useState } from \"react\";\nimport {\n  Button,\n  Grid,\n  Typography,\n  Modal,\n  Paper,\n  makeStyles,\n  TextField,\n  Avatar,\n} from \"@material-ui/core\";\nimport axios from \"axios\";\nimport ChipInput from \"material-ui-chip-input\";\nimport FileUploadInput from \"../lib/FileUploadInput\";\nimport DescriptionIcon from \"@material-ui/icons/Description\";\nimport FaceIcon from \"@material-ui/icons/Face\";\n\nimport { SetPopupContext } from \"../App\";\n\nimport apiList, { server } from \"../lib/apiList\";\n\nconst useStyles = makeStyles((theme) => ({\n  body: {\n    height: \"inherit\",\n  },\n  popupDialog: {\n    height: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    // padding: \"30px\",\n  },\n  avatar: {\n    alignSelf: \"center\",\n    width: theme.spacing(17),\n    height: theme.spacing(17),\n  },\n}));\n\nconst MultifieldInput = (props) => {\n  const classes = useStyles();\n  const { education, setEducation } = props;\n\n  return (\n    <>\n      {education.map((obj, key) => (\n        <Grid item container className={classes.inputBox} key={key}>\n          <Grid item xs={6}>\n            <TextField\n              label={`Institution Name #${key + 1}`}\n              value={education[key].institutionName}\n              onChange={(event) => {\n                const newEdu = [...education];\n                newEdu[key].institutionName = event.target.value;\n                setEducation(newEdu);\n              }}\n              variant=\"outlined\"\n              fullWidth\n            />\n          </Grid>\n          <Grid item xs={3}>\n            <TextField\n              label=\"Start Year\"\n              value={obj.startYear}\n              variant=\"outlined\"\n              type=\"number\"\n              onChange={(event) => {\n                const newEdu = [...education];\n                newEdu[key].startYear = event.target.value;\n                setEducation(newEdu);\n              }}\n            />\n          </Grid>\n          <Grid item xs={3}>\n            <TextField\n              label=\"End Year\"\n              value={obj.endYear}\n              variant=\"outlined\"\n              type=\"number\"\n              onChange={(event) => {\n                const newEdu = [...education];\n                newEdu[key].endYear = event.target.value;\n                setEducation(newEdu);\n              }}\n            />\n          </Grid>\n        </Grid>\n      ))}\n      <Grid item style={{ alignSelf: \"center\" }}>\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          onClick={() =>\n            setEducation([\n              ...education,\n              {\n                institutionName: \"\",\n                startYear: \"\",\n                endYear: \"\",\n              },\n            ])\n          }\n          className={classes.inputBox}\n        >\n          Add another institution details\n        </Button>\n      </Grid>\n    </>\n  );\n};\n\nconst Profile = (props) => {\n  const classes = useStyles();\n  const setPopup = useContext(SetPopupContext);\n  const [userData, setUserData] = useState();\n  const [open, setOpen] = useState(false);\n\n  const [profileDetails, setProfileDetails] = useState({\n    name: \"\",\n    education: [],\n    skills: [],\n    resume: \"\",\n    profile: \"\",\n  });\n\n  const [education, setEducation] = useState([\n    {\n      institutionName: \"\",\n      startYear: \"\",\n      endYear: \"\",\n    },\n  ]);\n\n  const handleInput = (key, value) => {\n    setProfileDetails({\n      ...profileDetails,\n      [key]: value,\n    });\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const getData = () => {\n    axios\n      .get(apiList.user, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        },\n      })\n      .then((response) => {\n        console.log(response.data);\n        setProfileDetails(response.data);\n        if (response.data.education.length > 0) {\n          setEducation(\n            response.data.education.map((edu) => ({\n              institutionName: edu.institutionName ? edu.institutionName : \"\",\n              startYear: edu.startYear ? edu.startYear : \"\",\n              endYear: edu.endYear ? edu.endYear : \"\",\n            }))\n          );\n        }\n      })\n      .catch((err) => {\n        //console.log(err.response.data);\n        setPopup({\n          open: true,\n          severity: \"error\",\n          message: \"Error\",\n        });\n      });\n  };\n\n  const getResume = () => {\n    const address = `${profileDetails.resume}`;\n    console.log(address);\n    if (address !== \"\") {\n      window.open(address);\n      // console.log(error);\n    } else {\n      setPopup({\n        open: true,\n        severity: \"error\",\n        message: \"You have not uploaded any resume. Upload one to view!\",\n      });\n    }\n\n    // axios(address, {\n    //   method: \"GET\",\n    //   responseType: \"blob\",\n    // })\n    //   .then((response) => {\n    //     const file = new Blob([response.data], { type: \"application/pdf\" });\n    //     const fileURL = URL.createObjectURL(file);\n    //     window.open(fileURL);\n    //   })\n    //   .catch((error) => {\n    //     console.log(error);\n    //     setPopup({\n    //       open: true,\n    //       severity: \"error\",\n    //       message: \"You have not uploaded any resume. Upload one to view!\",\n    //     });\n    //   });\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const editDetails = () => {\n    setOpen(true);\n  };\n\n  const handleUpdate = () => {\n    console.log(education);\n\n    let updatedDetails = {\n      ...profileDetails,\n      education: education\n        .filter((obj) => obj.institutionName.trim() !== \"\")\n        .map((obj) => {\n          if (obj[\"endYear\"] === \"\") {\n            delete obj[\"endYear\"];\n          }\n          return obj;\n        }),\n    };\n\n    axios\n      .put(apiList.user, updatedDetails, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        },\n      })\n      .then((response) => {\n        setPopup({\n          open: true,\n          severity: \"success\",\n          message: response.data.message,\n        });\n        getData();\n      })\n      .catch((err) => {\n        setPopup({\n          open: true,\n          severity: \"error\",\n          message: err.response.data.message,\n        });\n        console.log(err.response);\n      });\n    setOpen(false);\n  };\n\n  return (\n    <>\n      <Grid\n        container\n        item\n        direction=\"column\"\n        alignItems=\"center\"\n        style={{ padding: \"30px\", minHeight: \"93vh\" }}\n      >\n        <Grid item xs>\n          <Paper\n            style={{\n              padding: \"20px\",\n              outline: \"none\",\n              display: \"flex\",\n              flexDirection: \"column\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n            }}\n          >\n            <Grid\n              container\n              direction=\"column\"\n              alignItems=\"center\"\n              xs={2}\n              style={{\n                display: \"center\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n                float: \"left\",\n              }}\n            >\n              <Avatar\n                src={`${profileDetails.profile}`}\n                className={classes.avatar}\n              />\n              <Typography\n                variant=\"h3\"\n                component=\"h2\"\n                style={{ color: \"#3f51b5\", fontWeight: \"bold\" }}\n              >\n                Profile\n              </Typography>\n            </Grid>\n            <Grid container direction=\"column\" alignItems=\"\" spacing={3}>\n              {/* <Grid item >\n              \n            </Grid> */}\n\n              <Grid item>\n                <TextField\n                  label=\"Name\"\n                  value={profileDetails.name}\n                  onChange={(event) => handleInput(\"name\", event.target.value)}\n                  className={classes.inputBox}\n                  variant=\"outlined\"\n                  fullWidth\n                />\n              </Grid>\n              <MultifieldInput\n                education={education}\n                setEducation={setEducation}\n              />\n              <Grid item>\n                <ChipInput\n                  className={classes.inputBox}\n                  label=\"Skills\"\n                  variant=\"outlined\"\n                  helperText=\"Press enter to add skills\"\n                  value={profileDetails.skills}\n                  onAdd={(chip) =>\n                    setProfileDetails({\n                      ...profileDetails,\n                      skills: [...profileDetails.skills, chip],\n                    })\n                  }\n                  onDelete={(chip, index) => {\n                    let skills = profileDetails.skills;\n                    skills.splice(index, 1);\n                    setProfileDetails({\n                      ...profileDetails,\n                      skills: skills,\n                    });\n                  }}\n                  fullWidth\n                />\n              </Grid>\n              <Grid item>\n                <FileUploadInput\n                  className={classes.inputBox}\n                  label=\"Resume (Images only)\"\n                  icon={<DescriptionIcon />}\n                  uploadTo={apiList.uploadResume}\n                  handleInput={handleInput}\n                  identifier={\"resume\"}\n                />\n              </Grid>\n              <Grid item>\n                <Button\n                  variant=\"contained\"\n                  className={classes.statusBlock}\n                  color=\"primary\"\n                  onClick={() => getResume()}\n                  style={{ alignItems: \"center\" }}\n                >\n                  View Uploaded Resume\n                </Button>\n              </Grid>\n              <Grid item>\n                <FileUploadInput\n                  className={classes.inputBox}\n                  label=\"Profile Photo (.jpg/.png)\"\n                  icon={<FaceIcon />}\n                  uploadTo={apiList.uploadProfileImage}\n                  handleInput={handleInput}\n                  identifier={\"profile\"}\n                />\n              </Grid>\n            </Grid>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              style={{\n                padding: \"10px 50px\",\n                marginTop: \"30px\",\n                borderRadius: \"8px\",\n                height: \"50px\",\n              }}\n              onClick={() => handleUpdate()}\n            >\n              Update Details\n            </Button>\n          </Paper>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default Profile;\n","C:\\Users\\PRIYANSHU\\PRIYANSHU\\CODING\\PROJECTS\\LinkIt\\frontend\\src\\component\\Home.js",["108","109","110","111"],"C:\\Users\\PRIYANSHU\\PRIYANSHU\\CODING\\PROJECTS\\LinkIt\\frontend\\src\\component\\Applications.js",["112","113","114","115","116","117","118","119","120"],"C:\\Users\\PRIYANSHU\\PRIYANSHU\\CODING\\PROJECTS\\LinkIt\\frontend\\src\\component\\recruiter\\CreateJobs.js",["121","122"],"C:\\Users\\PRIYANSHU\\PRIYANSHU\\CODING\\PROJECTS\\LinkIt\\frontend\\src\\component\\recruiter\\MyJobs.js",["123","124","125"],"C:\\Users\\PRIYANSHU\\PRIYANSHU\\CODING\\PROJECTS\\LinkIt\\frontend\\src\\component\\recruiter\\JobApplications.js",["126","127","128","129","130","131","132"],"C:\\Users\\PRIYANSHU\\PRIYANSHU\\CODING\\PROJECTS\\LinkIt\\frontend\\src\\lib\\MessagePopup.js",[],"C:\\Users\\PRIYANSHU\\PRIYANSHU\\CODING\\PROJECTS\\LinkIt\\frontend\\src\\component\\recruiter\\AcceptedApplicants.js",["133","134","135","136","137","138","139","140","141","142"],"C:\\Users\\PRIYANSHU\\PRIYANSHU\\CODING\\PROJECTS\\LinkIt\\frontend\\src\\lib\\isAuth.js",[],"C:\\Users\\PRIYANSHU\\PRIYANSHU\\CODING\\PROJECTS\\LinkIt\\frontend\\src\\component\\recruiter\\Profile.js",["143","144"],"C:\\Users\\PRIYANSHU\\PRIYANSHU\\CODING\\PROJECTS\\LinkIt\\frontend\\src\\lib\\PasswordInput.js",[],"C:\\Users\\PRIYANSHU\\PRIYANSHU\\CODING\\PROJECTS\\LinkIt\\frontend\\src\\lib\\apiList.js",[],"C:\\Users\\PRIYANSHU\\PRIYANSHU\\CODING\\PROJECTS\\LinkIt\\frontend\\src\\lib\\EmailInput.js",[],"C:\\Users\\PRIYANSHU\\PRIYANSHU\\CODING\\PROJECTS\\LinkIt\\frontend\\src\\lib\\FileUploadInput.js",[],{"ruleId":"145","replacedBy":"146"},{"ruleId":"147","replacedBy":"148"},{"ruleId":"149","severity":1,"message":"150","line":19,"column":8,"nodeType":"151","messageId":"152","endLine":19,"endColumn":14},{"ruleId":"149","severity":1,"message":"153","line":36,"column":7,"nodeType":"151","messageId":"152","endLine":36,"endColumn":12},{"ruleId":"154","severity":1,"message":"155","line":16,"column":6,"nodeType":"156","endLine":16,"endColumn":8,"suggestions":"157"},{"ruleId":"158","severity":1,"message":"159","line":46,"column":11,"nodeType":"160","endLine":46,"endColumn":58},{"ruleId":"149","severity":1,"message":"161","line":10,"column":3,"nodeType":"151","messageId":"152","endLine":10,"endColumn":8},{"ruleId":"149","severity":1,"message":"162","line":4,"column":3,"nodeType":"151","messageId":"152","endLine":4,"endColumn":12},{"ruleId":"158","severity":1,"message":"159","line":113,"column":9,"nodeType":"160","endLine":113,"endColumn":53},{"ruleId":"149","severity":1,"message":"163","line":6,"column":3,"nodeType":"151","messageId":"152","endLine":6,"endColumn":8},{"ruleId":"149","severity":1,"message":"164","line":20,"column":19,"nodeType":"151","messageId":"152","endLine":20,"endColumn":25},{"ruleId":"149","severity":1,"message":"165","line":115,"column":10,"nodeType":"151","messageId":"152","endLine":115,"endColumn":18},{"ruleId":"149","severity":1,"message":"166","line":115,"column":20,"nodeType":"151","messageId":"152","endLine":115,"endColumn":31},{"ruleId":"149","severity":1,"message":"167","line":116,"column":10,"nodeType":"151","messageId":"152","endLine":116,"endColumn":14},{"ruleId":"154","severity":1,"message":"168","line":143,"column":6,"nodeType":"156","endLine":143,"endColumn":8,"suggestions":"169"},{"ruleId":"149","severity":1,"message":"170","line":208,"column":9,"nodeType":"151","messageId":"152","endLine":208,"endColumn":20},{"ruleId":"149","severity":1,"message":"171","line":212,"column":9,"nodeType":"151","messageId":"152","endLine":212,"endColumn":20},{"ruleId":"149","severity":1,"message":"172","line":15,"column":3,"nodeType":"151","messageId":"152","endLine":15,"endColumn":12},{"ruleId":"149","severity":1,"message":"173","line":20,"column":8,"nodeType":"151","messageId":"152","endLine":20,"endColumn":18},{"ruleId":"154","severity":1,"message":"168","line":548,"column":6,"nodeType":"156","endLine":548,"endColumn":8,"suggestions":"174"},{"ruleId":"158","severity":1,"message":"159","line":649,"column":15,"nodeType":"160","endLine":649,"endColumn":62},{"ruleId":"149","severity":1,"message":"175","line":6,"column":3,"nodeType":"151","messageId":"152","endLine":6,"endColumn":13},{"ruleId":"149","severity":1,"message":"176","line":7,"column":3,"nodeType":"151","messageId":"152","endLine":7,"endColumn":17},{"ruleId":"149","severity":1,"message":"162","line":10,"column":3,"nodeType":"151","messageId":"152","endLine":10,"endColumn":12},{"ruleId":"149","severity":1,"message":"177","line":13,"column":3,"nodeType":"151","messageId":"152","endLine":13,"endColumn":9},{"ruleId":"149","severity":1,"message":"178","line":14,"column":3,"nodeType":"151","messageId":"152","endLine":14,"endColumn":19},{"ruleId":"149","severity":1,"message":"172","line":15,"column":3,"nodeType":"151","messageId":"152","endLine":15,"endColumn":12},{"ruleId":"149","severity":1,"message":"179","line":16,"column":3,"nodeType":"151","messageId":"152","endLine":16,"endColumn":11},{"ruleId":"149","severity":1,"message":"180","line":17,"column":3,"nodeType":"151","messageId":"152","endLine":17,"endColumn":11},{"ruleId":"154","severity":1,"message":"168","line":229,"column":6,"nodeType":"156","endLine":229,"endColumn":8,"suggestions":"181"},{"ruleId":"149","severity":1,"message":"182","line":1,"column":22,"nodeType":"151","messageId":"152","endLine":1,"endColumn":31},{"ruleId":"149","severity":1,"message":"163","line":6,"column":3,"nodeType":"151","messageId":"152","endLine":6,"endColumn":8},{"ruleId":"149","severity":1,"message":"172","line":15,"column":3,"nodeType":"151","messageId":"152","endLine":15,"endColumn":12},{"ruleId":"149","severity":1,"message":"173","line":21,"column":8,"nodeType":"151","messageId":"152","endLine":21,"endColumn":18},{"ruleId":"154","severity":1,"message":"168","line":714,"column":6,"nodeType":"156","endLine":714,"endColumn":8,"suggestions":"183"},{"ruleId":"149","severity":1,"message":"176","line":7,"column":3,"nodeType":"151","messageId":"152","endLine":7,"endColumn":17},{"ruleId":"149","severity":1,"message":"162","line":10,"column":3,"nodeType":"151","messageId":"152","endLine":10,"endColumn":12},{"ruleId":"149","severity":1,"message":"177","line":13,"column":3,"nodeType":"151","messageId":"152","endLine":13,"endColumn":9},{"ruleId":"149","severity":1,"message":"172","line":15,"column":3,"nodeType":"151","messageId":"152","endLine":15,"endColumn":12},{"ruleId":"149","severity":1,"message":"179","line":16,"column":3,"nodeType":"151","messageId":"152","endLine":16,"endColumn":11},{"ruleId":"149","severity":1,"message":"164","line":29,"column":19,"nodeType":"151","messageId":"152","endLine":29,"endColumn":25},{"ruleId":"154","severity":1,"message":"168","line":669,"column":6,"nodeType":"156","endLine":669,"endColumn":8,"suggestions":"184"},{"ruleId":"149","severity":1,"message":"176","line":7,"column":3,"nodeType":"151","messageId":"152","endLine":7,"endColumn":17},{"ruleId":"149","severity":1,"message":"162","line":10,"column":3,"nodeType":"151","messageId":"152","endLine":10,"endColumn":12},{"ruleId":"149","severity":1,"message":"177","line":13,"column":3,"nodeType":"151","messageId":"152","endLine":13,"endColumn":9},{"ruleId":"149","severity":1,"message":"178","line":14,"column":3,"nodeType":"151","messageId":"152","endLine":14,"endColumn":19},{"ruleId":"149","severity":1,"message":"172","line":15,"column":3,"nodeType":"151","messageId":"152","endLine":15,"endColumn":12},{"ruleId":"149","severity":1,"message":"179","line":16,"column":3,"nodeType":"151","messageId":"152","endLine":16,"endColumn":11},{"ruleId":"149","severity":1,"message":"185","line":20,"column":10,"nodeType":"151","messageId":"152","endLine":20,"endColumn":19},{"ruleId":"149","severity":1,"message":"164","line":29,"column":19,"nodeType":"151","messageId":"152","endLine":29,"endColumn":25},{"ruleId":"149","severity":1,"message":"186","line":378,"column":9,"nodeType":"151","messageId":"152","endLine":378,"endColumn":17},{"ruleId":"154","severity":1,"message":"168","line":646,"column":6,"nodeType":"156","endLine":646,"endColumn":8,"suggestions":"187"},{"ruleId":"149","severity":1,"message":"163","line":6,"column":3,"nodeType":"151","messageId":"152","endLine":6,"endColumn":8},{"ruleId":"154","severity":1,"message":"168","line":53,"column":6,"nodeType":"156","endLine":53,"endColumn":8,"suggestions":"188"},"no-native-reassign",["189"],"no-negated-in-lhs",["190"],"no-unused-vars","'isAuth' is defined but never used.","Identifier","unusedVar","'TITLE' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setPopup'. Either include it or remove the dependency array.","ArrayExpression",["191"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Input' is defined but never used.","'TextField' is defined but never used.","'Modal' is defined but never used.","'server' is defined but never used.","'userData' is assigned a value but never used.","'setUserData' is assigned a value but never used.","'open' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.",["192"],"'handleClose' is assigned a value but never used.","'editDetails' is assigned a value but never used.","'FormGroup' is defined but never used.","'Pagination' is defined but never used.",["193"],"'IconButton' is defined but never used.","'InputAdornment' is defined but never used.","'Slider' is defined but never used.","'FormControlLabel' is defined but never used.","'MenuItem' is defined but never used.","'Checkbox' is defined but never used.",["194"],"'useEffect' is defined but never used.",["195"],["196"],"'useParams' is defined but never used.","'colorSet' is assigned a value but never used.",["197"],["198"],"no-global-assign","no-unsafe-negation",{"desc":"199","fix":"200"},{"desc":"201","fix":"202"},{"desc":"201","fix":"203"},{"desc":"201","fix":"204"},{"desc":"201","fix":"205"},{"desc":"201","fix":"206"},{"desc":"201","fix":"207"},{"desc":"201","fix":"208"},"Update the dependencies array to be: [setPopup]",{"range":"209","text":"210"},"Update the dependencies array to be: [getData]",{"range":"211","text":"212"},{"range":"213","text":"212"},{"range":"214","text":"212"},{"range":"215","text":"212"},{"range":"216","text":"212"},{"range":"217","text":"212"},{"range":"218","text":"212"},[422,424],"[setPopup]",[3529,3531],"[getData]",[16641,16643],[5987,5989],[21496,21498],[19381,19383],[19325,19327],[1039,1041]]